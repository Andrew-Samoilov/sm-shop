generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model brands {
  id Int @id @default(autoincrement())

  name        String
  logo        String?
  description String?
  website     String?
  country     String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  models      models[]
  tyres       tyres[]  @relation("BrandTyres")
}

model tyres {
  id Int @id(map: "tires_pkey") @default(autoincrement())

  model_id  Int?
  model_rel models? @relation(fields: [model_id], references: [id])
  brand_id  Int?
  brand_rel brands? @relation("BrandTyres", fields: [brand_id], references: [id])

  title              String
  slug               String    
  description        String?
  country            String?  @db.VarChar(50)
  date_code          String?  @db.Char(4)
  applicability      String?  @db.VarChar(50)
  sku                String   @unique(map: "tires_sku_key") @db.VarChar(50)
  inventory_quantity Int?     @default(0)
  price              Decimal  @db.Decimal(10, 2)
  load_speed_index   String?  @db.VarChar(10)
  brand              String?  @db.VarChar(50)
  model              String?  @db.VarChar(100)
  width              Decimal? @db.Decimal(4, 1)
  profile            Decimal? @db.Decimal(4, 1)
  constr             String?  @db.Char(1)
  diameter           Decimal? @db.Decimal(4, 1)
  delimiter          String?  @db.Char(1)
  load_index         String?  @db.VarChar(10)
  speed_index        String?  @db.Char(1)
  type               String?  @db.VarChar(50)
}

model models {
  id Int @id @default(autoincrement())

  brandId Int
  brand   brands @relation(fields: [brandId], references: [id], onDelete: Cascade)

  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  tyres       tyres[]
}
