generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Brand {
  id          Int      @id @default(autoincrement())
  slug        String   @unique @default("") @db.VarChar(100)
  name        String
  logo        String?
  description String?
  website     String?
  country     String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  models      Model[]
  tyres       Tyre[]   @relation("BrandTyres")

  @@index([slug])
  @@map("brands")
}

model Tyre {
  id                 Int      @id(map: "tires_pkey") @default(autoincrement())
  slug               String   @default("") @db.VarChar(160)
  title              String
  sku                String   @unique(map: "tires_sku_key") @db.VarChar(50)
  description        String?
  price              Float
  inventory_quantity Int?     @default(0)
  country            String?  @db.VarChar(50)
  date_code          String?  @db.Char(4)
  applicability      String?  @db.VarChar(50)
  load_speed_index   String?  @db.VarChar(10)
  load_index         String?  @db.VarChar(10)
  speed_index        String?  @db.Char(1)
  type               String?  @db.VarChar(50)
  constr             String?  @db.Char(1)
  delimiter          String?  @db.Char(1)
  width              Decimal? @db.Decimal(4, 1)
  profile            Decimal? @db.Decimal(4, 1)
  diameter           Decimal? @db.Decimal(4, 1)
  brand              String?  @db.VarChar(50)
  model              String?  @db.VarChar(100)
  brand_id           Int?
  model_id           Int?
  brand_rel          Brand?   @relation("BrandTyres", fields: [brand_id], references: [id])
  model_rel          Model?   @relation(fields: [model_id], references: [id])

  @@index([title(ops: raw("gin_trgm_ops"))], map: "tyres_title_trgm_idx", type: Gin)
  @@map("tyres")
}

model Model {
  id          Int          @id @default(autoincrement())
  slug        String       @unique @db.VarChar(200)
  name        String
  description String?      @db.Text
  brandId     Int
  brand       Brand        @relation(fields: [brandId], references: [id], onDelete: Cascade)
  tyres       Tyre[]
  images      ModelImage[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([slug])
  @@map("models")
}

model Message {
  id        String   @id @default(uuid())
  name      String
  email     String
  phone     String?
  message   String
  createdAt DateTime @default(now())

  @@map("messages")
}

model ModelImage {
  id       Int     @id @default(autoincrement())
  modelId  Int
  model    Model   @relation(fields: [modelId], references: [id], onDelete: Restrict)
  url      String
  alt      String?
  width    Int?
  height   Int?
  position Int     @default(0)

  @@map("model_images")
}
